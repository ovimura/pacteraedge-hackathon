<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/repos/pacteraedge-hackathon/pacteraedge-hackathon/q2/q2.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1062"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,10:mainsales_data"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="sales_data" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="44"/><column index="2" value="40"/><column index="3" value="73"/><column index="4" value="97"/><column index="5" value="67"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="stores_data" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="44"/><column index="2" value="40"/><column index="3" value="49"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">select Store, avg(Weekly_Sales) avg_weekly_sale from sales_data
group by Store
order by 2;

select a.st, b.avg_ws from 
(select Store st, avg(Weekly_Sales) avg_ws from sales_data
group by Store) a join (select Store st, avg(Weekly_Sales) avg_ws from sales_data
group by Store) b on a.avg_ws = b.avg_ws;

create table mytemp as 
select st, avg_ws from 
(select Store st, avg(Weekly_Sales) avg_ws from sales_data
group by Store)
order by 2 ASC limit 10;

select * from mytemp;

select type, avg(store) from stores_data
group by TYPE;

select row_number() over( order by st) as rf, avg_ws from mytemp;
select st, rank() over( order by avg_ws asc) as RANK, avg_ws from mytemp;



-- Query 1

select st, avg_ws, rank() over( order by avg_ws asc) as RANK from 
(select st, avg_ws from 
(select Store st, avg(Weekly_Sales) avg_ws from sales_data
group by Store)
order by 2 ASC limit 10);



-- Query 2

create table high_avg_ws_A as 
select st.Type, st.store, avg(sa.Weekly_Sales) from stores_data st inner join sales_data sa on st.store = sa.store
where st.Type = 'A'
group by 1, 2
order by 3 desc limit 5;

create table high_avg_ws_B as 
select st.Type, st.store, avg(sa.Weekly_Sales) from stores_data st inner join sales_data sa on st.store = sa.store
where st.Type = 'B'
group by 1, 2
order by 3 desc limit 5;


create table high_avg_ws_C as 
select st.Type, st.store, avg(sa.Weekly_Sales) from stores_data st inner join sales_data sa on st.store = sa.store
where st.Type = 'C'
group by 1, 2
order by 3 desc limit 5;


select type, Store, &quot;avg(sa.Weekly_Sales)&quot; as avg_weely_sales from high_avg_ws_A
UNION
select * from high_avg_ws_B
UNION
select * from high_avg_ws_C;


-- Query 3
SELECT a.Store, a.date, a.total_ws, b.total_ws, b.date from
(select Store, substr(Date, 4,7) as date, sum(Weekly_Sales) as total_ws, substr(Date, 7,4) as year from sales_data
where (substr(Date, 7,4) = '2011' and substr(Date, 4,2) == '12')
group by 1) a join
(select Store, substr(Date, 4,7) as date, sum(Weekly_Sales) as total_ws, substr(Date, 7,4) as year from sales_data
where (substr(Date, 7,4) = '2010' and substr(Date, 4,2) == '12')
group by 1) b on a.Store = b.Store
where a.total_ws &gt; b.total_ws;


-- QUERY 4.a

select Date, IsHoliday, avg(Weekly_Sales) as avg_weekly_sales from sales_data
group by 2, 1
order by 2 DESC;

-- QUERY 4.b

create table h_highest_ws as
select Date, avg(Weekly_Sales) as avg_weekly_sales, IsHoliday from sales_data
where IsHoliday = 'TRUE'
group by 1
order by 2 DESC limit 10;

create table h_non_highest_ws as
select Date, avg(Weekly_Sales) as avg_weekly_sales, IsHoliday from sales_data
where IsHoliday = 'FALSE'
group by 1
order by 2 DESC limit 10;

SELECT * FROM h_highest_ws
UNION
SELECT * FROM  h_non_highest_ws
order by 3 DESC;



</sql><current_tab id="0"/></tab_sql></sqlb_project>
